seq 10: te da una secuencia
seq 1 2 10: empieza desde el 1 y cada paso añades 2
> "nombre": guardar un fichero
cat: para sacar información
uniq: antes tenemos que tener un sort. comparando las lineass que estan una detras de otra, compara 1 con 3 y dice que no son iguales 
uniq: devuelve duplicados. sort -n uniq_example.txt | uniq -d  te dice los valores duplicados
			   sort -n uniq_example.text | uniq -c de dice las lineas y cuantas veces aparece
sort: ordena alfabeticamente. -n numericamente -nr(orden inverso) -nru(numerica, inversa,palabras unicas) -u (uniq) y -d alfabeticamente
find . -iname "*optd*" : buscar fichero 
master: porque es un repositorio
	: buscar la columna -d -t(cual es el delimitador) -k(columna) 6r(numero columna, inversa)

sort -t "^" -k 6,6r (te pilla 6 hasta la columna 6 y ordenada la columna 6)
sort -t "^" -k 6,6 -k 8,8 
cut:sacar varias colummnas y meterlo en otro fichero
paste: concatena por columnas paste numbers numbers
paste -s convierte una linea
tr: translate tr a A (primero que tengo, como lo voy a cambiar)
grep -n "iata": buscando una palabra, indicame en que linea esta
grep: grep -n lacosaquequeremosbuscar buscamos nos devuelve la linea entera del string que buscamos
grep -c: cuenta
grep -n -o: todas las veces que lo ha encontrado y donde lo ha encontrado. 
sed: cambiar un string por otra cosa. se puede poner cualquier caracter de delimitador, en este caso es s. echo Sunday | sed ssdaysnights 
sed -i: cambio se implemetena en el fichero
git reset --hard HEAD: volver a la ultima versión
linea de 2 a 4 '2, 4d'
linea 2 y 4 '2d;4d'
linea numero'3d'
me quedo con el numero '/14/!d'
me quedo con la línea '3!d'
-----------------------------------------*-----------------------
archivos zip
zcat nombrefichero.zip
gzip: siempre tiene un solo fichero dentro

buscar historial = ctrl + r
---------------------------------------*-------------------------------------------
¿Como se hace un script? 
nombre script 
parametro delimitador
parametro nombre fichero
salida numero y nombre de columna
1.touch csv_number_column.sh esta extensión porque es estandar
2. gedit editor de texto or nano csv_number_column.sh

paste <(seq 1 10) <(head -1 optd_aircraft.csv | tr "^" "\n")
cat csv_number_column.sh
head -1 optd_aircraft.csv
head -1  optd_aircraft.csv | tr "^" "\n" | wc -l #comentado

creado una shell y le ha dado como parametro nuestro script

bash csv_number_column.sh
chmod 777 csv_number_column.sh
bash ./csv_number_column.sh

SCRIPT:

#!/bin/bash
DELIMITER=$1
FILE=$2
NUM_OF_COLUMNS=$(head -1 ${FILE} | tr ${DELIMITER} "\n"| wc -l)

paste <(seq 1  ${NUM_OF_COLUMNS}) <(head -1 ${FILE} | tr ${DELIMITER} "\n")
# NUM_OF_COLUMNS =
# FILE =
# paste <(seq 1 10) <(head -1 optd_aircraft.csv | tr "^" "\n")



-----------------------------------*------------------------------------
Util cuando nos queramos conectar a varios

find . -type f -name "*.txt" -exec ls -l {} \; -exec sleep 5 \;
ctrl + z : funciona primer plano

sin & no puedes seguir trabajando en la consola en un segundo plano
con & puedes seguir trabajando en la consola en un segundo plano


fg: para traer al primer plano, recupera el proceso del identificador
jobs: cuantos procesos y cuales son
bg: segundo plano de backgraound


cuando no podemos para algo abrir otra shell
ps -u: sale el numero de procesos 
kill -9 18246(el proceso de find pid):

ps -u dsc | grep sleep


------------------------------------------*------------------------------
simplifica la vida 

install csvkit 

Donde mas se utiliza

csvsql -d "^" -i mysql optd_aircraft.csv > table.sql
cat table.sql


------------------------------------------*--------------------------------

Be careful with install .git in the home. The command to delete: rm -rf .git


-----------------------------------------*---------------------------------
GITHUB:


Step by step to upload the archive. Para subir un archivo. 

1º Looking for the folder where you work in your github
2º git init
3º touch nameofthefile
4º git add .
5º git commit -m "your commit of nameoftheline"
6º git push origin master 

--------------------------------------*-------------------------------------

Step by step to clone archive. Para clonar un archivo. 

1º Looking for the folder where you work in your github
2º git init
3º git clone pathoftheclone
4º git add .
5º git commit -m "your commit of nameoftheline"
6º git push origin master 



----------------------------------------*------------------------------------

Step by step to update archive. Para actualizar un documento que ya tengo subido.
1º Pull request
2º Create pull request
3º Merge pull request



---------------------------------------*------------------------------
UPLOAD THE NEW FILE IN THE SAME PROJECT

git branch pruebita
git checkout pruebita
Switched to branch 'pruebita'
touch 08_09_Lists_class.ipynb
git add .
git commit -m "trying upload the file"
git checkout master
git merge pruebita
git branch -d pruebita
git push origin master             


------------------------------------------*----------------------------------
DELETE FILE IN THE PROJECT/REPOSITORY

git rm -nameofthefile
git add --all
git commit -m "tell me why you delete the file"
git push origin master

t
git rm -r nameofmyfolder
git commit -m "delete my folder"
-------------------------------------------*----------------------------------

 touch 01_intro_to_notebook_empty.ipynb
 git add .     

































































